\b{Filesystem\}
  \b{Temporary FS\}
    use memory (RAM) for short-term use. 
    e.g. tmpfs
  \b{Virtual FS\} 
    the word "virtual" means that the supplied "files" (virtual files) 
    are computed on request. 
    e.g. procfs, sysfs
  \b{Disk FS\}
    e.g. FAT, HFS, ext
  \b{Network FS\}
    A FS that acts as a client for a remote file access protocol, 
    providing access to files on a server.
    e.g. NFS, AFS, SMB
  \b{Special FS\}
    A special FS presents non-file elements of an OS as files so they can 
    be acted on using FS APIs. 
    \b{Device FS\}
	A device FS represents I/O devices and pseudo-device as files,
	called device files. 
	e.g. devfs, udev
    \b{configfs and sysfs\} in Linux kernel provides files that can be
    used to query the kernel for info and configure entities in the 
    kernel.
    \b{procfs\} maps processes and other OS structures into a filespace.
\b{FILE\}
    regular file
    directory
    block special file:   /dev
    character special file
    pipe (FIFO)
    network file: Internet socket, NFS file or UNIX domain socket

\b{File GROUP\}
    source
    binary
    config 
    documentation

\b{FILE DESCRIPTOR\} (FD)
    an bastract indicator (handle) used to access afile or other I/O 
    resource, e.g. a pipe or network socket.

    Every process has three standard FD: stdin(0), stdout(1), stderr(2).

\b{block device\}

## device specification
    filename	: /dev/sda1
    label
    uuid
    partuuid
    partlabel

\b{PROCESS/PROGRAM\}
    process = program + permission + pid
    A process is a program in running state, a program can stimulate multiple
    processes.

\b{PRIORITY/NICE\}
    Priority(new) = priority(old) + nice (root: -20~19; user: 0~19)
    priority is administrated by system, user can only change nice.

\b{RUNNING STATUS\}
    r	running
    s	sleep
    b	sleep state that can't be waked up, usually waiting for I/O
    t	stop
    z	zombie

\b{SIGNALS\}	    
    kill -l	show signal tbale
    kill -STOP	
    kill -CONT
    man 7 signal

\b{SUID/SGID\}
    * SUID are only effective to \b{binary program\}
    * user should have 'x' permission
    * SUID is only effective in run-time (execution)
    * User will own the permission of the owner of this program.

\b{SELinux\}
    Security Enhanced Linux.
    DAC :   Discretionary Access Control: access control centres on user
    MAC :   Mandatory Access Control: access control centers on program.



\b{console\}
    system console, which provides a way for the kernel and other 
    processes to send output to and receive message from user. 

    In Linux, press CTRL+ALT+F1 to get a console.
    The Linux (virtual) console is implemented by the
    VT subsystem of the Linux kernel, which doesn't rely on any user 
    space software. On the contrary, the \b{terminal emulator\} is a user
    space process.
  \u{virtual console\}
    consoles that are logically separate, but share the same physical 
    keyboard and display.

\b{terminal\}
    a terminal is a session which can receive and send input and output, a
    console is a special case of terminal (a physical terminal)

    +---------------------------+
    |        terminal           |
    |  +---------------------+  |
    |  |  virtual terminal   |  |
    |  |                     |  |
    |  | +-----------------+ |  |
    |  | | pseudo terminal | |  |
    |  | +-----------------+ |  |
    |  |                     |  |
    |  +---------------------+  |
    +---------------------------+

    In general, a virtual console is a virtual terminal, those "virtual
    terminals" that are not virtual consoles are indeed pseudoterminals.



